From 6ca49f580a80f4027cb56938f58a5e2db39b43d2 Mon Sep 17 00:00:00 2001
From: Nicolay Izoderov <nico-izo@ya.ru>
Date: Tue, 18 Aug 2015 21:28:44 +0300
Subject: [PATCH 7/8] Fixed parsing of time with milliseconds in UTC format

---
 src/util.cpp | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/src/util.cpp b/src/util.cpp
index 8b082d9..0fffa3d 100644
--- a/src/util.cpp
+++ b/src/util.cpp
@@ -78,6 +78,12 @@ namespace Jreen
 #define TIME_STAMP_STR QLatin1String("hh:mm")
 #define DATE_STAMP_STR QLatin1String("yyyy-MM-dd")
 
+/**
+ * This method used to parse datetimes, described in XEP-0082.
+ *
+ * @param stamp â€” DateTime formatted as described in XEP-0082
+ * @return QDateTime
+ */
 QDateTime Util::fromStamp(const QString &stamp)
 {
 	QDateTime date_time;
@@ -85,15 +91,20 @@ QDateTime Util::fromStamp(const QString &stamp)
 		if (stamp.size() == 10)
 			return QDateTime::fromString(stamp, DATE_STAMP_STR);
 		int num = stamp.indexOf(QLatin1Char('Z'));
-		if(num < 0)
+		if(num < 0) {
 			num = stamp.lastIndexOf(QLatin1Char('-'));
+			num = std::max(num, stamp.lastIndexOf(QLatin1Char('+')));
+		}
+
 		QString time = stamp;
 		time.truncate(num);
 		if(num == 19)
 			date_time = QDateTime::fromString(time, DATE_TIME_STAMP_STR);
 		else
 			date_time = QDateTime::fromString(time, FULL_STAMP_STR);
-		if(num > 19) {
+
+		// This way we parse +/-hh:mm suffix
+		if(num > 19 && !stamp.endsWith(QLatin1Char('Z'))) {
 			QTime delta = QTime::fromString(stamp.right(5), TIME_STAMP_STR);
 			int multi = 1;
 			if(stamp.at(stamp.length() - 6) == QLatin1Char('+'))
-- 
2.5.0

